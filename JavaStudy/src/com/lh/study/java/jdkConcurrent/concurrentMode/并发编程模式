1、单例模式----SingleTonMode
单例对象的类必须保证只有一个实力存在。许多时候整个系统只需要拥有一个全局对象，这样有利于我们协调系统整体的行为。
比如：全局信息配置。

2、不变模式----ImmutabilityMode
*一个类的内部状态创建后，在整个生命期间都不会发现变化就是不变类
*不变模式不需要同步，因为不会变，没有线程安全问题

3、future模式----FutureMode
future模式的核心思想是异步调用
JDK中自带的callable和FutureTask类提供future模式使用

4、生产者-消费者模式    为多线程间的协作提供了良好的解决方案。在该模式中，有两类线程，生产者线程和消费者线程。
生产者负责提交用户请求，消费者负责具体处理生产者提交的任务。生产者和消费者之间则通过共享缓冲区进行通信。
例如：BlockingQueue